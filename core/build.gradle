plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'maven-publish'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    def versionPropsFile = file('version.properties')
    def patchVersion = 1

    Properties versionProps = new Properties()

    if (!versionPropsFile.exists())
    {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    if(versionPropsFile.canRead())
    {
        if('assembleRelease' in gradle.startParameter.taskNames)
        {
            versionProps.load(new FileInputStream(versionPropsFile))

            if(patchVersion != versionProps['VERSION_PATCH'].toInteger())
            {
                versionProps['VERSION_PATCH'] = patchVersion.toString()
                versionProps['VERSION_BUILD'] = "0"
            }
            else versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

            versionProps.store(versionPropsFile.newWriter(), null)
        }

        defaultConfig {
            minSdkVersion 23
            targetSdkVersion 30
            versionCode 1
            versionName "1.0.${versionProps['VERSION_PATCH']}.${versionProps['VERSION_BUILD']}"

            setProperty("archivesBaseName", "core-$versionName")
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"
        }
    } else throw new FileNotFoundException("Could not read version.properties!")

    buildTypes {
        debug {
            multiDexEnabled true
            ext.alwaysUpdateBuildId = false
        }
        release {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true // Enable backward support for new language APIs
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = '1.8' }

    buildFeatures.dataBinding = true
    dexOptions.preDexLibraries = false
    ndkVersion '22.0.7026061'
}

ext.versions = [
        lifecycle          : '2.2.0',
        room               : '2.3.0',
        retrofit2          : '2.9.0',
        hilt               : '1.0.0-alpha03',
        dagger             : '2.35.1',
]

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Kotlin
    implementation "androidx.core:core-ktx:1.5.0-rc01"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Android
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'

    // Android KTX
    implementation 'androidx.fragment:fragment-ktx:1.3.3'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.room:room-ktx:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
//    kapt "android.arch.persistence.room:compiler:$versions.room"

    // Hilt
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt"
//    kapt "androidx.hilt:hilt-compiler:$versions.hilt"
    implementation "com.google.dagger:hilt-android:$versions.dagger"
    kapt "com.google.dagger:hilt-android-compiler:$versions.dagger"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
//    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
//    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"

    // Google
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.zxing:core:3.4.1'

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit2"
    implementation "com.squareup.retrofit2:converter-jackson:$versions.retrofit2"

    // Misc.
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'io.coil-kt:coil:1.2.1'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/robinlow/util-android")
                credentials {
                    username = GITHUB_USER
                    password = GITHUB_WRITE_ACCESS_TOKEN
                }
            }
        }

        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can customize attributes of the publication here or in module's build.gradle file.
                groupId 'com.ownapp.util'
                artifactId 'core'
                version '1.0.40'
            }
        }
    }
}